---
#
# This is the canonical configuration for the `README.md`
# Run `make init`, `make readme/deps` to load all the dependencies
# then run `make readme` as needed to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-datadog-integration

# Tags of this project
tags:
  - aws
  - terraform
  - terraform-modules
  - logging
  - monitoring
  - datadog

# Categories of this project
categories:
  - terraform-modules/logging

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-datadog-integration

# Badges to display

badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/terraform-aws-datadog-integration.svg"
    url: "https://github.com/cloudposse/terraform-aws-datadog-integration/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"

related:
  - name: "fluentd-datadog-logs"
    description: "Dockerfile that implements fluentd log forwarding to datadog's new log service"
    url: "https://github.com/cloudposse/fluentd-datadog-logs"
  - name: "terraform-datadog-monitor"
    description: "Terraform module to provision Standard System Monitors (cpu, memory, swap, io, etc) in Datadog"
    url: "https://github.com/cloudposse/terraform-datadog-monitor"

# Short description of this project
description: |-
  Terraform module to configure [Datadog AWS integration](https://docs.datadoghq.com/api/v1/aws-integration/).

# How to use this project
usage: |-

  For a complete example, see [examples/complete](examples/complete).

  For automated tests of the complete example using [bats](https://github.com/bats-core/bats-core) and [Terratest](https://github.com/gruntwork-io/terratest) (which tests and deploys the example on AWS), see [test](test).

  **Note:** At the moment this module supports a limited set of IAM policies to support Datadog integrations. More can be added as needed.

  ### Structure

  This module follows [Datadog's documentation](https://docs.datadoghq.com/integrations/amazon_web_services/)
  by supporting a `core` integration which is the minimum set of permissions needed for any Datadog integration,
  plus an additional integration per service which contains the additional permissions Datadog has documented
  are required for that service.

  To make things easier, this module also implements an `all` integration which includes all the permissions Datadog
  lists under "All Permissions" as the maximal set of permissions required, so you can just set
  `integrations = ["all"]` and be done.

  ### Installation

  For security, Datadog uses an [AWS External ID](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html)
  when assuming the role this module creates. To configure this:

  1. Go to Datadog's [integration control panel](https://app.datadoghq.com/account/settings#integrations/amazon_web_services)
     and begin the integration process by adding an account, at which point Datadog will generate the `AWS External ID`.
  1. Set the Terraform variable `datadog_external_id` to the AWS External ID as a string.
  1. Apply the Terraform plan to create the role, and note the name of the role created.
  1. Enter the name of the created role in Datadog's integration control panel where it says "AWS Role name:".

  Include this module in your existing terraform code:

  ```hcl
    module "datadog_integration" {
      source = "git::https://github.com/cloudposse/terraform-aws-datadog-integration.git?ref=master"

      namespace                  = "eg"
      stage                      = "test"
      name                       = "datadog"
      integrations               = ["all"]
    }
  ```

examples: |-
  Review the [complete example](examples/complete) to see how to use this module.

include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Sergey Vasilyev"
    github: "s2504s"
  - name: "Erik Osterman"
    github: "osterman"
  - name: "Andriy Knysh"
    github: "aknysh"
