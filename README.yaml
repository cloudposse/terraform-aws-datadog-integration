#
# This is the canonical configuration for the `README.md`
# Run `make init`, `make readme/deps` to load all the dependencies
# then run `make readme` as needed to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-datadog-integration
# Tags of this project
tags:
  - aws
  - terraform
  - terraform-modules
  - logging
  - monitoring
  - datadog
# Categories of this project
categories:
  - terraform-modules/logging
# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"
# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-datadog-integration
# Badges to display
badges:
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse/terraform-aws-datadog-integration.svg?style=for-the-badge
    url: https://github.com/cloudposse/terraform-aws-datadog-integration/releases/latest
  - name: Last Updated
    image: https://img.shields.io/github/last-commit/cloudposse/terraform-aws-datadog-integration.svg?style=for-the-badge
    url: https://github.com/cloudposse/terraform-aws-datadog-integration/commits
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://cloudposse.com/slack

# List any related terraform modules that this module may be used with or that this module depends on.
related:
  - name: "fluentd-datadog-logs"
    description: "Dockerfile that implements fluentd log forwarding to datadog's new log service"
    url: "https://github.com/cloudposse/fluentd-datadog-logs"
  - name: "terraform-datadog-monitor"
    description: "Terraform module to provision Standard System Monitors (cpu, memory, swap, io, etc) in Datadog"
    url: "https://github.com/cloudposse/terraform-datadog-monitor"
  - name: "terraform-aws-datadog-lambda-forwarder"
    description: "Terraform module to provision all the necessary infrastructure to deploy [Datadog Lambda forwarders](https://github.com/DataDog/datadog-serverless-functions/tree/master/aws/logs_monitoring)"
    url: "https://github.com/cloudposse/terraform-aws-datadog-lambda-forwarder"
# Short description of this project
description: |-
  Terraform module to configure AWS integration with Datadog, enabling you to monitor your AWS resources through Datadog's platform.

usage: |-
  This module helps set up the AWS integration with Datadog, enabling you to monitor your AWS resources through Datadog's platform.

  ## Features
  
  - Configures AWS integration with Datadog
  - Sets up IAM role for Datadog to assume
  - Configures metrics collection with flexible filtering
  - Supports CSPM (Cloud Security Posture Management) and extended resource collection
  - Configures region-based filtering

  ## Usage

  ```hcl
  module "datadog_aws_integration" {
    source = "."

    enabled = true

    # Datadog account ID
    datadog_aws_account_id = "datadog-account-id"

    # Optional: Host tags
    host_tags = ["environment:prod", "team:dev"]

    # Optional: Metrics collection settings
    metrics_collection_enabled = true
    metrics_automute_enabled = true
    metrics_collect_cloudwatch_alarms = true
    metrics_collect_custom_metrics = true

    # Optional: Metrics filtering
    namespace_filters_include_only = ["AWS/EC2", "AWS/RDS"]
    namespace_filters_exclude_only = []

    # Optional: Resource collection settings
    extended_resource_collection_enabled = true
    cspm_resource_collection_enabled = true

    # Optional: Region filtering
    excluded_regions = ["cn-north-1", "cn-northwest-1"]
  }
  ```

  ## Variables

  - `enabled`: Whether to enable the integration (default: true)
  - `datadog_aws_account_id`: The AWS account ID of your Datadog account
  - `host_tags`: Optional list of tags to apply to the integration
  - `metrics_collection_enabled`: Enable metrics collection (default: true)
  - `metrics_automute_enabled`: Enable automute for metrics (default: true)
  - `metrics_collect_cloudwatch_alarms`: Collect CloudWatch alarms (default: true)
  - `metrics_collect_custom_metrics`: Collect custom metrics (default: true)
  - `namespace_filters_include_only`: List of metric namespaces to include
  - `namespace_filters_exclude_only`: List of metric namespaces to exclude
  - `extended_resource_collection_enabled`: Enable extended resource collection (default: true)
  - `cspm_resource_collection_enabled`: Enable CSPM resource collection (default: true)
  - `excluded_regions`: List of AWS regions to exclude from integration

  ## Outputs

  - `iam_role_arn`: The ARN of the IAM role created for Datadog
  - `external_id`: The external ID used for the IAM role trust relationship

  ## IAM Role

  The module creates an IAM role that Datadog can assume to collect metrics and logs from your AWS account. The role includes a trust relationship that allows Datadog's AWS account to assume the role with the proper external ID verification.

  ## Region Filtering

  The module supports region-based filtering through the `excluded_regions` variable. When regions are excluded:
  - The `include_all` parameter is set to false
  - The `include_only` parameter is set to the list of included regions

  When no regions are excluded, `include_all` is set to true.

  ## Metric Filtering

  The module supports flexible metric filtering through:
  - Namespace filters (include_only/exclude_only)
  - Tag filters for specific metric namespaces

  ## Security

  The module implements security best practices by:
  - Using external IDs for IAM role trust relationships
  - Allowing only specific actions in the assume role policy
  - Requiring proper verification of the Datadog AWS account
examples: |-
  Review the [complete example](examples/complete) to see how to use this module.
include: []
contributors: []
